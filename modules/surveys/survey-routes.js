// This is a file generated by the yeoman generator hapijs

/**
 * All the endpoints for anything related to survey
 *
 * @type {exports}
 */
var Joi = require('joi');
var surveyController = require('./survey-ctrl');
var routeValidation = require('./survey-route-validation');

module.exports = function() {
  return [
    {
      method: 'POST',
      path: '/surveys',
      config: {
        tags: ['api'],
        payload: {
          parse: true
        },
        description: 'Creates a survey',
        handler: surveyController.create,
        // validate: routeValidation.post
      }
    },

    {
      method: 'POST',
      path: '/surveys/createDummy',
      config: {
        tags: ['api'],
        payload: {
          parse: true
        },
        description: 'Creates a dummy survey with questions',
        handler: surveyController.createDummySurveyWithQuestions,
        // validate: routeValidation.post
      }
    },
		
    {
      method: 'GET',
      path: '/surveys',
      config : {
        tags: ['api'],
        description: 'Fetches all surveys',
        handler: surveyController.find
      }
    },

    {
      method: 'GET',
      path: '/surveys/findOne',
      config : {
        tags: ['api'],
        description: 'Fetches one survey',
        handler: surveyController.findOne
      }
    },

    {
      method: 'GET',
      path: '/surveys/count',
      config : {
        tags: ['api'],
        description: 'Returns number of surveys based on any or no conditions',
        handler: surveyController.count
      }
    },

    {
      method: 'GET',
      path: '/surveys/distinct',
      config : {
        tags: ['api'],
        description: 'Finds distinct values of field for documents matching conditions',
        handler: surveyController.distinct
      }
    },
		
    {
      method: 'GET',
      path: '/surveys/{id}',
      config : {
        tags: ['api'],
        description: 'Fetches a survey by id',
        handler: surveyController.findById,
        // validate: routeValidation.getById
      }
    },
		
    {
      method: 'PUT',
      path: '/surveys/{id}',
      config : {
        tags: ['api'],
        payload: {
          parse: true
        },
        description: 'Updates a survey for a specific id',
        handler: surveyController.update,
        // validate: routeValidation.put
      }
    },
		
    {
      method: 'DELETE',
      path: '/surveys/{id}',
      config : {
        tags: ['api'],
        description: 'Remove a survey for a specific id',
        handler: surveyController.remove,
        // validate: routeValidation.delete
      }
    },

    {
      method: 'GET',
      path: '/surveys/getSurveyCountByOrganization',
      config: {
        tags: ['api'],
        description: 'Returns count of responses based on criteria',
        handler: surveyController.getSurveyCountByOrganization,
        // validate: routeValidation.getSurveyCountByOrganization
      }
    }

		
		/* Add new methods above */
  ]
}();
