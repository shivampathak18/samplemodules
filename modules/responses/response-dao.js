// This is a file generated by the yeoman generator hapijs

/**
 * Dao layer which actually gets Response from the datastore
 *
 * @type {exports}
 */
var Boom = require('boom');
var mongoose = require('mongoose');
var Joi = require('joi');
var Schema = mongoose.Schema;
var _ = require('underscore');

var responseSchema = mongoose.Schema({
  survey_id : Schema.Types.ObjectId,
  survey_version: Number,
  survey_version_id : Schema.Types.ObjectId,

  device: Schema.Types.Mixed,


  answers : [Schema.Types.Mixed],

  organization_id: Schema.Types.ObjectId,

  app_version : Number,
  
  remote_ip: String,
  user_id: Schema.Types.ObjectId,
  browser_user_agent: String,
  modified_time : Date,
  modified_time_ts: Number,
  client_id: String,

  time_taken : Number,

  linked_response : [{
    _id : Schema.Types.ObjectId,
    version : Number,
    response_id : Schema.Types.ObjectId,
    order : Number 
  }],

  version : Number,

  response_id : Schema.Types.ObjectId,

  baseline_response : {
    _id : Schema.Types.ObjectId,
    version : Number,
    response_id : Schema.Types.ObjectId,
    index : {}
  },

  state: [String],
  flagged : Boolean,
  location: {
    type: String,
    coordinates: [Schema.Types.Mixed]
  },
  online : Boolean,
  created_on : Date,
  created_on_ts : Number

});

// Response Instance methods
responseSchema.methods.magic = function(callback){
  return this.model('Response').find({}, callback)
}

// Survey Collection method to get mappings of models according to ObjectId fields
responseSchema.statics.getObjectIDModel = function () {
  var hash = {
    'survey_id': 'Survey',
    'organisation_id': null,
    'answers': 'Answer',
    'user_id': 'User',
    'device': null
  }

  return hash;
}


// Response Indexes

// by organisation_id Response id and 
responseSchema.index({
  organisation_id: 1,
  survey_id: 1,
  response_id: 1,  
  version: 1,
  survey_version: 1,
  location: 1  
});



var Response = mongoose.model('Response', responseSchema);

module.exports = Response