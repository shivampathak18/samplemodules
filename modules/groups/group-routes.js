// This is a file generated by the yeoman generator hapijs

/**
 * All the endpoints for anything related to group
 *
 * @type {exports}
 */
var Joi = require('joi');
var groupController = require('./group-ctrl');
var routeValidation = require('./group-route-validation');

module.exports = function() {
  return [
    {
      method: 'POST',
      path: '/groups',
      config: {
        tags: ['api'],
        description: 'Creates a group',
        handler: groupController.create,
        validate: routeValidation.post
      }
    },
		
    {
      method: 'GET',
      path: '/groups',
      config : {
        tags: ['api'],
        description: 'Fetches all groups',
        handler: groupController.find
      }
    },

    {
      method: 'GET',
      path: '/groups/findOne',
      config : {
        tags: ['api'],
        description: 'Fetches one group',
        handler: groupController.findOne
      }
    },

    {
      method: 'GET',
      path: '/groups/count',
      config : {
        tags: ['api'],
        description: 'Returns number of groups based on any or no conditions',
        handler: groupController.count
      }
    },

    {
      method: 'GET',
      path: '/groups/distinct',
      config : {
        tags: ['api'],
        description: 'Finds distinct values of field for documents matching conditions',
        handler: groupController.distinct
      }
    },
		
    {
      method: 'GET',
      path: '/groups/{id}',
      config : {
        tags: ['api'],
        description: 'Fetches a group by id',
        handler: groupController.findById,
        validate: routeValidation.getById
      }
    },
		
    {
      method: 'PUT',
      path: '/groups/{id}',
      config : {
        tags: ['api'],
        description: 'Updates a group for a specific id',
        handler: groupController.update,
        validate: routeValidation.put
      }
    },
		
    {
      method: 'DELETE',
      path: '/groups/{id}',
      config : {
        tags: ['api'],
        description: 'Remove a group for a specific id',
        handler: groupController.remove,
        validate: routeValidation.delete
      }
    }
		
		/* Add new methods above */
  ]
}();
